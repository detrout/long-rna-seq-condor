.. _reference.example_rna-seq_analysis:

RNA-Seq Analysis Reference
==========================

Assuming everything is setup correctly, and after you've downloaded
your fastq files. You'll need to generate a :ref:`reference.library.tsv`
file.

Example Runfolder
-----------------

Assuming you are working with the contents of an Illumina runfolder
you will start with a directory tree like::

  180401_SN123_0123_AHABCDBCX2/
    Unaligned/
      Project_Name1/
        Sample_Name1/
          Name1_GGCTAC_L001_R1_001.fastq.gz
          Name1_GGCTAC_L001_R1_002.fastq.gz
          Name1_GGCTAC_L002_R1_003.fastq.gz
          Name1_GGCTAC_L002_R1_004.fastq.gz
          Name1_GGCTAC_L001_R2_001.fastq.gz
          Name1_GGCTAC_L001_R2_002.fastq.gz
          Name1_GGCTAC_L002_R2_003.fastq.gz
          Name1_GGCTAC_L002_R2_004.fastq.gz
      Project_Name2/
        Sample_Name2/
          Name2_CCGTCC_L001_R1_001.fastq.gz
          ...
      Project_Name3/
        Sample_Name3/
          Name3_GTCCGC_L001_R1_001.fastq.gz
          ...
      Project_Name4/
        Sample_Name4/
          Name4_GTGAAA_L001_R1_001.fastq.gz
          ...

If the runfolder is located on a system different from your analysis
computers you'll need to copy the files. We have found scp or rsync for
systems that you can connect to via ssh, or lftp for systems exporting
the runfolder via http or ftp to work well.


.. _reference.library.tsv:

library.tsv
-----------

The :ref:`reference.library.tsv` is the work horse metadata file
describing the analysis destination directory, the identifier for the
genome and annotations being used and to describe the locations of the
fastqs.

========== ============ ====== ========== ====== =====================
library_id analysis_dir genome annotation sex    read_1
========== ============ ====== ========== ====== =====================
12345      12345_mm10   mm10   V10        male   Name1*_R1*.fastq.gz
12346      12345_mm10   mm10   V10        male   Name2*_R1*.fastq.gz
12347      12345_mm10   mm10   V10        male   Name3*_R1*.fastq.gz
12348      12345_hg38   hg38   V24        female Name4*_R1*.fastq.gz
========== ============ ====== ========== ====== =====================


.. glossary::
   
    library_id
      A unique identifier used later to group libraries together
      into experiments.
    
    analysis_dir
      A target directory to write analysis files to, they should be
      distinct because there will be name collisions between files
      generated by some of the underlying tools.
    
    genome
      A short name for the reference genome being used
    
    annotation
      A short name describing the genomic feature description file
      being used
    
    sex
      which sex version of the genome is being used. We have mostly
      used this for processing mammals which come in two common
      reference genome versions.
    
    read_1
      a comma seperated list with standard unix-style file name glob
      expansion. It is resolved as being relative to the path where
      the library.tsv file is located.

      For instance fastq files in a subdirectory called Name1, could
      be specified with Name1/Name1*_R1*.fastq.gz

      Fastqs found in the runfolder mounted some where might be
      `/sequences/runfolder_name/Demultiplexed/Project_Name1/Sample_Name1/Name1*_R1*.fastq.gz`
    
    read_2
      (optional) The second read if you are processing paired end data.
      the two file name lists are ascii sorted to make the orders consistent.
      This works nicely for the filenames as generated by the Illumina
      demultiplexing pipeline, but if you are using multiple files
      please make sure they will sort correctly.
    
    reference_prefix
      (optional) What reference prefix should be expected to be present to indicate
      what references should appear in the bigWigs. It defaults to "chr"
      which is reasonable for well annotated mammalian genomes but may not
      be appropriate for other species. You can use - to indicate that
      all references should be included. (We typically do this if we want
      to investigate the spike ins)


Once your :ref:`reference.library.tsv` is generated, you can then run
:ref:`commands.make_dag` now, before starting to make the experiment
file if you'd like.

.. _reference.experiment.tsv:
   
experiments.tsv
---------------

=========== =================
experiments replicates
=========== =================
mice        12345,12346,12347
human       12348
=========== =================


.. glossary::
   
    experiments
      A name describing your group of "replicates". The names were
      chosen when we were comparing replicates, but it's just
      libraries you would like to look at together, so could also be
      
      
    replicates
      A comma seperated list of library IDs that you would like
      grouped together. These groups are used to generate the set
      of gene quantification files and QC report sections comparing
      mapping statistics and replicate concordance.
    
      library_ids can be repeated in the experiments.tsv

    color
      (optional) Set the RGB color for a particular experiment
      to the specifed value such as green, 0,255,0. It is
      used by make_trackhub to set the color for all the
      tracks associated with an experiment.

.. _reference.building_indexes:

Building Indexes
----------------

Some times you'll need to build your own indexes. Perhaps you want to
use a genome build and annotation set that hasn't isn't prebuilt or
perhaps you have an experiment with a customized genome.

The best reference for building `STAR`_ and `rsem`_ indexes are of
course their own documentation, but these example submit scripts might
be a helpful starting point.

The submit files do assume that there will be a subdirectory named
log/ to store log files in.

It assumes your combined GTF file built with
:ref:`commands.merge_encode_annotations` will be called
gencode.v$(Version)-tRNAs-ERCC.gff and that your combined genome file
and spike in file will be located in the target genome directory.
     
.. code-block:: ini

  # Generate STAR indexes
  #
  # Based on https://github.com/ENCODE-DCC/long-rna-seq-pipeline/blob/master/dnanexus/prep-star/resources/usr/bin/lrna_index_star.sh
  # Commit a678b54
  #
  # STAR Documentation: https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf
  
  universe=vanilla
  log=log/prep-star-$(Process).log
  output=log/prep-star-$(Process).out
  error=log/prep-star-$(Process).out
  
  STAR_DIR=     #directory containing STAR exexutable
  GENOME_ROOT=  # path to where to genome index files should be written
  GENOME=       # reference genome name
  ANNOTATION=   # annotation version number
  SEX=          # Sex of genome
  GENOME_TRIPLET=$(GENOME)-$(ANNOTATION)-$(SEX)
  GENOME_DIR=$(GENOME_ROOT)/$(GENOME_TRIPLET)/
  GTF=$(GENOME_DIR)gencode.v$(ANNOTATION)-tRNAs-ERCC.gff

  THREADS=8
  # RSEM docs suggest that 100 bp will usually work
  READ_LENGTH=100
  
  request_cpus=$(THREADS)
  executable=$(STAR_DIR)/STAR
  arguments="--runThreadN $(THREADS) \
             --runMode genomeGenerate \
             --genomeDir $(GENOME_DIR) \
             --genomeFastaFiles $(GENOME_DIR)/$(GENOME).fa \
	                        $(GENOME_DIR)/ERCC.fa \
             --sjdbOverhang $(READ_LENGTH) \
             --sjdbGTFfile $(GTF)"
   queue
     
.. code-block:: ini

  # Generate RSEM indexes
  #
  # From https://github.com/ENCODE-DCC/long-rna-seq-pipeline/blob/master/dnanexus/prep-rsem/resources/usr/bin/lrna_index_rsem.sh
  # commit a678b54
  #
  # 
  universe=vanilla
  log=log/prep-rsem-$(Process).log
  output=log/prep-rsem-$(Process).out
  error=log/prep-rsem-$(Process).out
  ENVIRONMENT="PATH=/bin:/usr/bin"
  
  RSEM_DIR=     # directory containing rsem-prepare-reference
  GENOME_ROOT=  # Root for built index directories
  GENOME=       # reference genome name
  ANNOTATION=   # annotation version number
  SEX=          # referencne genome sex
  GENOME_TRIPLET=$(GENOME)-$(ANNOTATION)-$(SEX)
  GENOME_DIR=$(GENOME_ROOT)/$(GENOME_TRIPLET)/
  GTF=$(GENOME_DIR)gencode.v$(ANNOTATION)-tRNAs-ERCC.gff
  
  THREADS=8
  
  request_cpus=$(THREADS)
  executable=$(RSEM_DIR)/rsem-prepare-reference
  arguments="--gtf $(GTF) \
             $(GENOME_DIR)/$(GENOME).fa,$(GENOME_DIR)/ERCC.fa \
             $(GENOME_DIR)rsem \
  "
  queue
		
.. _STAR: https://github.com/alexdobin/STAR
.. _rsem: https://deweylab.github.io/RSEM/
